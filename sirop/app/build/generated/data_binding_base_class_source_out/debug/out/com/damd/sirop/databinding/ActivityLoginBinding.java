// Generated by view binder compiler. Do not edit!
package com.damd.sirop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.damd.sirop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnInicio;

  @NonNull
  public final Button btnRegistrar;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final EditText txtPassword;

  @NonNull
  public final EditText txtUsuario;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnInicio,
      @NonNull Button btnRegistrar, @NonNull TextView textView, @NonNull TextView textView2,
      @NonNull TextView textView3, @NonNull EditText txtPassword, @NonNull EditText txtUsuario) {
    this.rootView = rootView;
    this.btnInicio = btnInicio;
    this.btnRegistrar = btnRegistrar;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.txtPassword = txtPassword;
    this.txtUsuario = txtUsuario;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnInicio;
      Button btnInicio = ViewBindings.findChildViewById(rootView, id);
      if (btnInicio == null) {
        break missingId;
      }

      id = R.id.btnRegistrar;
      Button btnRegistrar = ViewBindings.findChildViewById(rootView, id);
      if (btnRegistrar == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.txtPassword;
      EditText txtPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtPassword == null) {
        break missingId;
      }

      id = R.id.txtUsuario;
      EditText txtUsuario = ViewBindings.findChildViewById(rootView, id);
      if (txtUsuario == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnInicio, btnRegistrar,
          textView, textView2, textView3, txtPassword, txtUsuario);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
